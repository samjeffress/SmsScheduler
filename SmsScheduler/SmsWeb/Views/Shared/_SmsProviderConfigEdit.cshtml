@model ConfigurationModels.SmsProviderConfiguration

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    function SmsProviderSet() {
        var provider = $("#SmsProvider").val();
        if (provider === "Twilio") {
            $("#TwilioConfigDiv").show();
            $("#NexmoConfigDiv").hide();
        } else if (provider === "Nexmo") {
            $("#NexmoConfigDiv").show();
            $("#TwilioConfigDiv").hide();
        } else {
            $("#NexmoConfigDiv").hide();
            $("#TwilioConfigDiv").hide();
        }
    }

    $().ready(function () {
        SmsProviderSet();
    });

</script>

@using (Ajax.BeginForm("EditSMSAjax", "ProviderConfig", new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "SMSProviderConfigDiv", OnSuccess = "SmsProviderSet"}, new { Class = "form-inline" }))
{
    @Html.AntiForgeryToken() 
    @Html.ValidationSummary(true)

    <fieldset>
        <div>
            @Html.DropDownListFor(m => m.SmsProvider, @ViewData["SmsProviders"] as List<SelectListItem>)
            <input type="submit" class="btn" value="Save" />
        </div>
    </fieldset>
}



<div id="TwilioConfigDiv" style="display: none">
    @Html.Action("EditAjax", "TwilioConfig")
</div>
<div id="NexmoConfigDiv" style="display: none">
    @Html.Action("EditAjax", "NexmoConfig")
</div>